{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React JS\\\\dragndrop-todo\\\\src\\\\components\\\\screens\\\\MainScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport InputBar from './InputBar';\nimport { handleDragEnd } from '../func/MainFunction';\nimport '../styles/MainScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainScreen() {\n  _s();\n\n  const [addTask, setAddTask] = useState('');\n  const [item, setItem] = useState([{\n    id: v4(),\n    task: 'Main bola sama presiden Putin ⚽'\n  }, {\n    id: v4(),\n    task: 'Makan ayam di MCD 🍗'\n  }, {\n    id: v4(),\n    task: 'Meeting dengan presiden Joko Widodo 🫱🏾‍🫲🏽'\n  }]);\n  const [complete, setCompleted] = useState([{\n    id: v4(),\n    task: 'Main basket sama Baim Wong 🏀'\n  }, {\n    id: v4(),\n    task: 'Makan ikan di KFC 🐟'\n  }, {\n    id: v4(),\n    task: 'Meeting dengan presiden Donal Trump 🫱🏾‍🫲🏽'\n  }]);\n\n  const handleOnDragnEnd = res => {\n    if (!res.destination) return;\n    console.log(res);\n\n    if (res.source.droppableId === \"completed\") {\n      const tempArray = Array.from(complete);\n      const [reorderedItem] = tempArray.splice(res.source.index, 1);\n\n      if (res.destination.droppableId === \"completed\") {\n        tempArray.splice(res.destination.index, 0, reorderedItem);\n        setCompleted(tempArray);\n      } else if (res.destination.droppableId === \"task\") {\n        const taskArray = Array.from(item);\n        taskArray.splice(res.destination.index, 0, reorderedItem);\n        setItem(taskArray);\n        setCompleted(tempArray);\n      }\n    } else if (res.source.droppableId === \"task\") {\n      const tempArray = Array.from(item);\n      const [reorderedItem] = tempArray.splice(res.source.index, 1);\n\n      if (res.destination.droppableId === \"task\") {\n        tempArray.splice(res.destination.index, 0, reorderedItem);\n        setItem(tempArray);\n      } else if (res.destination.droppableId === \"completed\") {\n        const completedArray = Array.from(complete);\n        completedArray.splice(res.destination.index, 0, reorderedItem);\n        setCompleted(completedArray);\n        setItem(tempArray);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Drag-n-Drop To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBar, {\n      addTask: addTask,\n      setAddTask: setAddTask,\n      item: item,\n      setitem: setItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragnEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Current Task :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"task\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"TaskBody\",\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [item.map((_ref, idx) => {\n                  let {\n                    id,\n                    task\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: id,\n                    index: idx,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.dragHandleProps,\n                      ...provided.draggableProps,\n                      children: /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"listContainer\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: task\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 33\n                        }, this)\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 29\n                    }, this)\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 25\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"completed\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"TaskBody\",\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Completed Task :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [complete.map((_ref2, idx) => {\n                  let {\n                    id,\n                    task\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: id,\n                    index: idx,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.dragHandleProps,\n                      ...provided.draggableProps,\n                      children: /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"listContainer\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: task\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 134,\n                          columnNumber: 33\n                        }, this)\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 29\n                    }, this)\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 25\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainScreen, \"sAhrbfy6RsfIofj0XbyhKHkz70M=\");\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"names":["React","useState","v4","DragDropContext","Droppable","Draggable","InputBar","handleDragEnd","MainScreen","addTask","setAddTask","item","setItem","id","task","complete","setCompleted","handleOnDragnEnd","res","destination","console","log","source","droppableId","tempArray","Array","from","reorderedItem","splice","index","taskArray","completedArray","provided","innerRef","droppableProps","map","idx","dragHandleProps","draggableProps","placeholder"],"sources":["D:/Code/React JS/dragndrop-todo/src/components/screens/MainScreen.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { v4 } from 'uuid'\r\nimport { DragDropContext,Droppable,Draggable } from 'react-beautiful-dnd'\r\nimport InputBar from './InputBar'\r\nimport { handleDragEnd } from '../func/MainFunction'\r\nimport '../styles/MainScreen.css'\r\n\r\n\r\nfunction MainScreen() {\r\n    const [addTask,setAddTask] = useState('')\r\n    const [item,setItem] = useState([\r\n        {\r\n            id:v4(),\r\n            task:'Main bola sama presiden Putin ⚽'\r\n        },\r\n        {\r\n            id:v4(),\r\n            task:'Makan ayam di MCD 🍗'\r\n        },\r\n        {\r\n            id:v4(),\r\n            task:'Meeting dengan presiden Joko Widodo 🫱🏾‍🫲🏽'\r\n        }\r\n    ])\r\n    \r\n    const [complete,setCompleted] = useState([\r\n        {\r\n            id:v4(),\r\n            task:'Main basket sama Baim Wong 🏀'\r\n        },\r\n        {\r\n            id:v4(),\r\n            task:'Makan ikan di KFC 🐟'\r\n        },\r\n        {\r\n            id:v4(),\r\n            task:'Meeting dengan presiden Donal Trump 🫱🏾‍🫲🏽'\r\n        }\r\n    ])\r\n\r\n\r\n    const handleOnDragnEnd = (res) =>{\r\n        if(!res.destination) return\r\n            console.log(res)\r\n        if (res.source.droppableId === \"completed\") {\r\n            const tempArray = Array.from(complete)\r\n            const [reorderedItem] = tempArray.splice(res.source.index,1)\r\n            if (res.destination.droppableId === \"completed\") {\r\n                tempArray.splice(res.destination.index,0,reorderedItem)\r\n                setCompleted(tempArray)\r\n            }else if(res.destination.droppableId === \"task\"){\r\n                const taskArray = Array.from(item)\r\n                taskArray.splice(res.destination.index,0,reorderedItem)\r\n                setItem(taskArray)\r\n                setCompleted(tempArray)\r\n            }\r\n        }else if(res.source.droppableId === \"task\"){\r\n            const tempArray = Array.from(item)\r\n            const [reorderedItem] = tempArray.splice(res.source.index,1)\r\n            if (res.destination.droppableId === \"task\") {\r\n                tempArray.splice(res.destination.index,0,reorderedItem)\r\n                setItem(tempArray)\r\n            }else if(res.destination.droppableId === \"completed\"){\r\n                const completedArray = Array.from(complete)\r\n                completedArray.splice(res.destination.index,0,reorderedItem)\r\n                setCompleted(completedArray)\r\n                setItem(tempArray)\r\n            }\r\n        }\r\n    }   \r\n\r\n  return (\r\n    <div className=\"MainContainer\">\r\n      <h1>Drag-n-Drop To-do List</h1>\r\n      <InputBar\r\n        addTask={addTask}\r\n        setAddTask={setAddTask}\r\n        item={item}\r\n        setitem={setItem}\r\n      />\r\n      <div>\r\n        <DragDropContext onDragEnd={handleOnDragnEnd}>\r\n          <div className=\"section\">\r\n            <h1>Current Task :</h1>\r\n            <Droppable droppableId=\"task\">\r\n              {(provided) => (\r\n                <div\r\n                  className=\"TaskBody\"\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  <ul>\r\n                    {item.map(({ id, task }, idx) => {\r\n                      return (\r\n                        <Draggable key={id} draggableId={id} index={idx}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.dragHandleProps}\r\n                              {...provided.draggableProps}\r\n                            >\r\n                              <li key={id} className=\"listContainer\">\r\n                                <p>{task}</p>\r\n                              </li>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <Droppable droppableId=\"completed\">\r\n              {(provided) => (\r\n                <div\r\n                  className=\"TaskBody\"\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  <h1>Completed Task :</h1>\r\n                  <ul>\r\n                    {complete.map(({ id, task }, idx) => {\r\n                      return (\r\n                        <Draggable key={id} draggableId={id} index={idx}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.dragHandleProps}\r\n                              {...provided.draggableProps}\r\n                            >\r\n                              <li key={id} className=\"listContainer\">\r\n                                <p>{task}</p>\r\n                              </li>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\GitHub\\\\ReactJS\\\\dragndrop-todo\\\\src\\\\components\\\\screens\\\\InputBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../styles/MainScreen.css\";\nimport { v4 } from \"uuid\";\nimport { useState } from \"react\";\nimport Modal from \"../../Modal/AddColumnModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputBar(_ref) {\n  _s();\n\n  let {\n    addTask,\n    setAddTask,\n    item,\n    setitem\n  } = _ref;\n  const [openModal, setOpenModal] = useState(false);\n  const [addColumnName, setAddColumnName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: addTask,\n      onChange: e => setAddTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (addTask.length < 3) {\n          return;\n        } else {\n          setitem(prev => ({ ...prev,\n            // current kolom\n            \"Main-Todo\": { ...prev[\"Main-Todo\"],\n              // current kolom[\"Main-Todo\"]\n              items: prev[\"Main-Todo\"].items.concat({\n                id: v4(),\n                content: addTask\n              }) // new items\n\n            }\n          }));\n          setAddTask(\"\");\n        }\n      },\n      className: \"AddButton\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenModal(!openModal),\n      className: \"AddButton\",\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), openModal && /*#__PURE__*/_jsxDEV(Modal, {\n      setModal: setOpenModal,\n      setname: setAddColumnName,\n      name: addColumnName,\n      item: item,\n      setitem: setitem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputBar, \"CUyg5r/A8Ht/tLuOerQeqZao3go=\");\n\n_c = InputBar;\nexport default InputBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputBar\");","map":{"version":3,"names":["React","v4","useState","Modal","InputBar","addTask","setAddTask","item","setitem","openModal","setOpenModal","addColumnName","setAddColumnName","e","target","value","length","prev","items","concat","id","content"],"sources":["D:/Code/GitHub/ReactJS/dragndrop-todo/src/components/screens/InputBar.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/MainScreen.css\";\r\nimport { v4 } from \"uuid\";\r\nimport { useState } from \"react\";\r\nimport Modal from \"../../Modal/AddColumnModal\";\r\n\r\nfunction InputBar({ addTask, setAddTask, item, setitem }) {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [addColumnName, setAddColumnName] = useState(\"\");\r\n  return (\r\n    <div className=\"AddSection\">\r\n      <input value={addTask} onChange={(e) => setAddTask(e.target.value)} />\r\n      <button\r\n        onClick={() => {\r\n          if (addTask.length < 3) {\r\n            return;\r\n          } else {\r\n            setitem((prev) => ({\r\n              ...prev, // current kolom\r\n              \"Main-Todo\": {\r\n                ...prev[\"Main-Todo\"], // current kolom[\"Main-Todo\"]\r\n                items: prev[\"Main-Todo\"].items.concat({\r\n                  id: v4(),\r\n                  content: addTask,\r\n                }), // new items\r\n              },\r\n            }));\r\n            setAddTask(\"\");\r\n          }\r\n        }}\r\n        className=\"AddButton\"\r\n      >\r\n        Add Task\r\n      </button>\r\n      <button onClick={() => setOpenModal(!openModal)} className=\"AddButton\">\r\n        Add Column\r\n      </button>\r\n      {openModal && (\r\n        <Modal\r\n          setModal={setOpenModal}\r\n          setname={setAddColumnName}\r\n          name={addColumnName}\r\n          item={item}\r\n          setitem={setitem}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;;;AAEA,SAASC,QAAT,OAA0D;EAAA;;EAAA,IAAxC;IAAEC,OAAF;IAAWC,UAAX;IAAuBC,IAAvB;IAA6BC;EAA7B,CAAwC;EACxD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;EACA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE;MAAO,KAAK,EAAEG,OAAd;MAAuB,QAAQ,EAAGQ,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,OAAO,EAAE,MAAM;QACb,IAAIV,OAAO,CAACW,MAAR,GAAiB,CAArB,EAAwB;UACtB;QACD,CAFD,MAEO;UACLR,OAAO,CAAES,IAAD,KAAW,EACjB,GAAGA,IADc;YACR;YACT,aAAa,EACX,GAAGA,IAAI,CAAC,WAAD,CADI;cACW;cACtBC,KAAK,EAAED,IAAI,CAAC,WAAD,CAAJ,CAAkBC,KAAlB,CAAwBC,MAAxB,CAA+B;gBACpCC,EAAE,EAAEnB,EAAE,EAD8B;gBAEpCoB,OAAO,EAAEhB;cAF2B,CAA/B,CAFI,CAKP;;YALO;UAFI,CAAX,CAAD,CAAP;UAUAC,UAAU,CAAC,EAAD,CAAV;QACD;MACF,CAjBH;MAkBE,SAAS,EAAC,WAlBZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAwBE;MAAQ,OAAO,EAAE,MAAMI,YAAY,CAAC,CAACD,SAAF,CAAnC;MAAiD,SAAS,EAAC,WAA3D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBF,EA2BGA,SAAS,iBACR,QAAC,KAAD;MACE,QAAQ,EAAEC,YADZ;MAEE,OAAO,EAAEE,gBAFX;MAGE,IAAI,EAAED,aAHR;MAIE,IAAI,EAAEJ,IAJR;MAKE,OAAO,EAAEC;IALX;MAAA;MAAA;MAAA;IAAA,QA5BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD;;GA1CQJ,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
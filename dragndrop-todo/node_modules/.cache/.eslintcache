[{"D:\\Code\\React JS\\dragndrop-todo\\src\\index.js":"1","D:\\Code\\React JS\\dragndrop-todo\\src\\reportWebVitals.js":"2","D:\\Code\\React JS\\dragndrop-todo\\src\\components\\screens\\MainScreen.js":"3","D:\\Code\\React JS\\dragndrop-todo\\src\\components\\screens\\InputBar.js":"4","D:\\Code\\React JS\\dragndrop-todo\\src\\components\\func\\MainFunction.js":"5","D:\\Code\\React JS\\dragndrop-todo\\src\\Modal\\AddColumnModal.js":"6","D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\index.js":"7","D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\reportWebVitals.js":"8","D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\components\\screens\\MainScreen.js":"9","D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\components\\screens\\InputBar.js":"10","D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\Modal\\AddColumnModal.js":"11"},{"size":518,"mtime":1658991585798,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1658991102249,"results":"14","hashOfConfig":"13"},{"size":4098,"mtime":1659682627754,"results":"15","hashOfConfig":"13"},{"size":1474,"mtime":1659672622818,"results":"16","hashOfConfig":"13"},{"size":0,"mtime":1659672385620,"results":"17","hashOfConfig":"13"},{"size":1399,"mtime":1659672368606,"results":"18","hashOfConfig":"13"},{"size":518,"mtime":1658991585798,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1658991102249,"results":"21","hashOfConfig":"20"},{"size":4098,"mtime":1659682627754,"results":"22","hashOfConfig":"20"},{"size":1474,"mtime":1659672622818,"results":"23","hashOfConfig":"20"},{"size":1399,"mtime":1659672368606,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1c1zvkl",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"418iyg",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\React JS\\dragndrop-todo\\src\\index.js",[],[],[],"D:\\Code\\React JS\\dragndrop-todo\\src\\reportWebVitals.js",[],[],"D:\\Code\\React JS\\dragndrop-todo\\src\\components\\screens\\MainScreen.js",["60","61"],[],"import React, { useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport InputBar from \"./InputBar\";\r\nimport \"../styles/MainScreen.css\";\r\nimport { ScrollMenu } from \"react-horizontal-scrolling-menu\";\r\n\r\nfunction MainScreen() {\r\n  const [addTask, setAddTask] = useState(\"\");\r\n  const [kolom, setKolom] = useState({\r\n    [\"Main-Todo\"]: {\r\n      columnName: \"Todo\",\r\n      items: [\r\n        {\r\n          id: v4(),\r\n          content: \"Makan ayam di MCD 🍗\",\r\n        },\r\n        {\r\n          id: v4(),\r\n          content: \"Main bola sama presiden Putin ⚽\",\r\n        },\r\n      ],\r\n    },\r\n    [v4()]: {\r\n      columnName: \"In-Progress\",\r\n      items: [],\r\n    },\r\n  });\r\n\r\n  const handleOnDragnEnd = (res) => {\r\n    if (!res.destination) return;\r\n    if (res.source.droppableId !== res.destination.droppableId) {\r\n      const sourceColumn = kolom[res.source.droppableId];\r\n      console.log(\"Source Column: \", sourceColumn);\r\n      const destinationColumn = kolom[res.destination.droppableId];\r\n      console.log(\"Destination Column: \", destinationColumn);\r\n      const sourceitems = [...sourceColumn.items];\r\n      console.log(sourceitems);\r\n      const destItems = [...destinationColumn.items];\r\n      const [removed] = sourceitems.splice(res.source.index, 1);\r\n      destItems.splice(res.destination.index, 0, removed);\r\n      setKolom({\r\n        ...kolom,\r\n        [res.source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceitems,\r\n        },\r\n        [res.destination.droppableId]: {\r\n          ...destinationColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    } else {\r\n      const column = kolom[res.source.droppableId];\r\n      const copiedItem = [...column.items];\r\n      console.log(copiedItem);\r\n      const [removed] = copiedItem.splice(res.source.index, 1);\r\n      copiedItem.splice(res.destination.index, 0, removed);\r\n      setKolom({\r\n        ...kolom,\r\n        [res.source.droppableId]: {\r\n          ...column,\r\n          items: copiedItem,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"MainContainer\">\r\n      <h1>Drag-n-Drop To-do List</h1>\r\n      <InputBar\r\n        addTask={addTask}\r\n        setAddTask={setAddTask}\r\n        item={kolom}\r\n        setitem={setKolom}\r\n      />\r\n\r\n      <DragDropContext onDragEnd={handleOnDragnEnd}>\r\n        <div className=\"TaskBody\">\r\n          {Object.entries(kolom).map(([colID, item], index) => (\r\n            <div className=\"ColumnContainer\">\r\n              <h2>{item.columnName}</h2>\r\n              <Droppable droppableId={colID}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                    style={{\r\n                      background: snapshot.isDraggingOver\r\n                        ? \"aliceblue\"\r\n                        : \"white\",\r\n                      padding: 4,\r\n                      width: 300,\r\n                      height: 550,\r\n                    }}\r\n                  >\r\n                    {item.items.map((item, index) => (\r\n                      <Draggable\r\n                        key={item.id}\r\n                        draggableId={item.id}\r\n                        index={index}\r\n                      >\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.dragHandleProps}\r\n                            {...provided.draggableProps}\r\n                            className=\"list\"\r\n                          >\r\n                            <p>{item.content}</p>\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","D:\\Code\\React JS\\dragndrop-todo\\src\\components\\screens\\InputBar.js",[],[],"D:\\Code\\React JS\\dragndrop-todo\\src\\components\\func\\MainFunction.js",[],[],"D:\\Code\\React JS\\dragndrop-todo\\src\\Modal\\AddColumnModal.js",[],[],"D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\index.js",[],[],"D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\reportWebVitals.js",[],[],"D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\components\\screens\\MainScreen.js",["62","63"],[],"D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\components\\screens\\InputBar.js",[],[],"D:\\Code\\GitHub\\ReactJS\\dragndrop-todo\\src\\Modal\\AddColumnModal.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":11,"column":5,"nodeType":"70","messageId":"71","endLine":23,"endColumn":6,"fix":"72"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":11,"column":5,"nodeType":"70","messageId":"71","endLine":23,"endColumn":6,"fix":"73"},"no-unused-vars","'ScrollMenu' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property [\"Main-Todo\"] found.","Property","unnecessarilyComputedProperty",{"range":"74","text":"75"},{"range":"76","text":"75"},[401,414],"\"Main-Todo\"",[401,414]]
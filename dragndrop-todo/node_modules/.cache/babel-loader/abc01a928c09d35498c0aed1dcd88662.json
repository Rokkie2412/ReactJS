{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React JS\\\\dragndrop-todo\\\\src\\\\components\\\\screens\\\\MainScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport InputBar from \"./InputBar\";\nimport { handleDragEnd } from \"../func/MainFunction\";\nimport \"../styles/MainScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainScreen() {\n  _s();\n\n  const [addTask, setAddTask] = useState(\"\");\n  const [kolom, setKolom] = useState({\n    \"Current-Todo\": {\n      items: [{\n        id: v4(),\n        content: \"Makan ayam di MCD 🍗\"\n      }, {\n        id: v4(),\n        content: \"Main bola sama presiden Putin ⚽\"\n      }]\n    },\n    \"In-Progress\": {\n      items: []\n    },\n    Done: {\n      items: []\n    }\n  });\n  console.log(kolom);\n  const [item, setItem] = useState([{\n    id: v4(),\n    task: \"Main bola sama presiden Putin ⚽\"\n  }, {\n    id: v4(),\n    task: \"Makan ayam di MCD 🍗\"\n  }, {\n    id: v4(),\n    task: \"Meeting dengan presiden Joko Widodo 🫱🏾‍🫲🏽\"\n  }]);\n  const [complete, setCompleted] = useState([{\n    id: v4(),\n    task: \"Main basket sama Baim Wong 🏀\"\n  }, {\n    id: v4(),\n    task: \"Makan ikan di KFC 🐟\"\n  }, {\n    id: v4(),\n    task: \"Meeting dengan presiden Donal Trump 🫱🏾‍🫲🏽\"\n  }]);\n\n  const handleOnDragnEnd = res => {\n    if (!res.destination) return;\n    console.log(res); // if (res.source.droppableId === \"completed\") {\n    //   const tempArray = Array.from(complete);\n    //   const [reorderedItem] = tempArray.splice(res.source.index, 1);\n    //   if (res.destination.droppableId === \"completed\") {\n    //     tempArray.splice(res.destination.index, 0, reorderedItem);\n    //     setCompleted(tempArray);\n    //   } else if (res.destination.droppableId === \"task\") {\n    //     const taskArray = Array.from(item);\n    //     taskArray.splice(res.destination.index, 0, reorderedItem);\n    //     setItem(taskArray);\n    //     setCompleted(tempArray);\n    //   }\n    // } else if (res.source.droppableId === \"task\") {\n    //   const tempArray = Array.from(item);\n    //   const [reorderedItem] = tempArray.splice(res.source.index, 1);\n    //   if (res.destination.droppableId === \"task\") {\n    //     tempArray.splice(res.destination.index, 0, reorderedItem);\n    //     setItem(tempArray);\n    //   } else if (res.destination.droppableId === \"completed\") {\n    //     const completedArray = Array.from(complete);\n    //     completedArray.splice(res.destination.index, 0, reorderedItem);\n    //     setCompleted(completedArray);\n    //     setItem(tempArray);\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Drag-n-Drop To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBar, {\n      addTask: addTask,\n      setAddTask: setAddTask,\n      item: item,\n      setitem: setItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragnEnd,\n        children: Object.entries(kolom).map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item[0].items\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainScreen, \"HKTAmbHV5V+h5BPfuzX6pihsWuE=\");\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"names":["React","useState","v4","DragDropContext","Droppable","Draggable","InputBar","handleDragEnd","MainScreen","addTask","setAddTask","kolom","setKolom","items","id","content","Done","console","log","item","setItem","task","complete","setCompleted","handleOnDragnEnd","res","destination","Object","entries","map","index"],"sources":["D:/Code/React JS/dragndrop-todo/src/components/screens/MainScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport InputBar from \"./InputBar\";\r\nimport { handleDragEnd } from \"../func/MainFunction\";\r\nimport \"../styles/MainScreen.css\";\r\n\r\nfunction MainScreen() {\r\n  const [addTask, setAddTask] = useState(\"\");\r\n\r\n  const [kolom, setKolom] = useState({\r\n    \"Current-Todo\": {\r\n      items: [\r\n        {\r\n          id: v4(),\r\n          content: \"Makan ayam di MCD 🍗\",\r\n        },\r\n        {\r\n          id: v4(),\r\n          content: \"Main bola sama presiden Putin ⚽\",\r\n        },\r\n      ],\r\n    },\r\n    \"In-Progress\": {\r\n      items: [],\r\n    },\r\n    Done: {\r\n      items: [],\r\n    },\r\n  });\r\n\r\n  console.log(kolom);\r\n\r\n  const [item, setItem] = useState([\r\n    {\r\n      id: v4(),\r\n      task: \"Main bola sama presiden Putin ⚽\",\r\n    },\r\n    {\r\n      id: v4(),\r\n      task: \"Makan ayam di MCD 🍗\",\r\n    },\r\n    {\r\n      id: v4(),\r\n      task: \"Meeting dengan presiden Joko Widodo 🫱🏾‍🫲🏽\",\r\n    },\r\n  ]);\r\n\r\n  const [complete, setCompleted] = useState([\r\n    {\r\n      id: v4(),\r\n      task: \"Main basket sama Baim Wong 🏀\",\r\n    },\r\n    {\r\n      id: v4(),\r\n      task: \"Makan ikan di KFC 🐟\",\r\n    },\r\n    {\r\n      id: v4(),\r\n      task: \"Meeting dengan presiden Donal Trump 🫱🏾‍🫲🏽\",\r\n    },\r\n  ]);\r\n\r\n  const handleOnDragnEnd = (res) => {\r\n    if (!res.destination) return;\r\n    console.log(res);\r\n    // if (res.source.droppableId === \"completed\") {\r\n    //   const tempArray = Array.from(complete);\r\n    //   const [reorderedItem] = tempArray.splice(res.source.index, 1);\r\n    //   if (res.destination.droppableId === \"completed\") {\r\n    //     tempArray.splice(res.destination.index, 0, reorderedItem);\r\n    //     setCompleted(tempArray);\r\n    //   } else if (res.destination.droppableId === \"task\") {\r\n    //     const taskArray = Array.from(item);\r\n    //     taskArray.splice(res.destination.index, 0, reorderedItem);\r\n    //     setItem(taskArray);\r\n    //     setCompleted(tempArray);\r\n    //   }\r\n    // } else if (res.source.droppableId === \"task\") {\r\n    //   const tempArray = Array.from(item);\r\n    //   const [reorderedItem] = tempArray.splice(res.source.index, 1);\r\n    //   if (res.destination.droppableId === \"task\") {\r\n    //     tempArray.splice(res.destination.index, 0, reorderedItem);\r\n    //     setItem(tempArray);\r\n    //   } else if (res.destination.droppableId === \"completed\") {\r\n    //     const completedArray = Array.from(complete);\r\n    //     completedArray.splice(res.destination.index, 0, reorderedItem);\r\n    //     setCompleted(completedArray);\r\n    //     setItem(tempArray);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"MainContainer\">\r\n      <h1>Drag-n-Drop To-do List</h1>\r\n      <InputBar\r\n        addTask={addTask}\r\n        setAddTask={setAddTask}\r\n        item={item}\r\n        setitem={setItem}\r\n      />\r\n      <div>\r\n        <DragDropContext onDragEnd={handleOnDragnEnd}>\r\n          {Object.entries(kolom).map((item, index) => {\r\n            return (\r\n              <div>\r\n                <h2>{item[0].items}</h2>\r\n              </div>\r\n            );\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,0BAAP;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;IACjC,gBAAgB;MACdY,KAAK,EAAE,CACL;QACEC,EAAE,EAAEZ,EAAE,EADR;QAEEa,OAAO,EAAE;MAFX,CADK,EAKL;QACED,EAAE,EAAEZ,EAAE,EADR;QAEEa,OAAO,EAAE;MAFX,CALK;IADO,CADiB;IAajC,eAAe;MACbF,KAAK,EAAE;IADM,CAbkB;IAgBjCG,IAAI,EAAE;MACJH,KAAK,EAAE;IADH;EAhB2B,CAAD,CAAlC;EAqBAI,OAAO,CAACC,GAAR,CAAYP,KAAZ;EAEA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAC/B;IACEa,EAAE,EAAEZ,EAAE,EADR;IAEEmB,IAAI,EAAE;EAFR,CAD+B,EAK/B;IACEP,EAAE,EAAEZ,EAAE,EADR;IAEEmB,IAAI,EAAE;EAFR,CAL+B,EAS/B;IACEP,EAAE,EAAEZ,EAAE,EADR;IAEEmB,IAAI,EAAE;EAFR,CAT+B,CAAD,CAAhC;EAeA,MAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BtB,QAAQ,CAAC,CACxC;IACEa,EAAE,EAAEZ,EAAE,EADR;IAEEmB,IAAI,EAAE;EAFR,CADwC,EAKxC;IACEP,EAAE,EAAEZ,EAAE,EADR;IAEEmB,IAAI,EAAE;EAFR,CALwC,EASxC;IACEP,EAAE,EAAEZ,EAAE,EADR;IAEEmB,IAAI,EAAE;EAFR,CATwC,CAAD,CAAzC;;EAeA,MAAMG,gBAAgB,GAAIC,GAAD,IAAS;IAChC,IAAI,CAACA,GAAG,CAACC,WAAT,EAAsB;IACtBT,OAAO,CAACC,GAAR,CAAYO,GAAZ,EAFgC,CAGhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CA5BD;;EA8BA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MACE,OAAO,EAAEhB,OADX;MAEE,UAAU,EAAEC,UAFd;MAGE,IAAI,EAAES,IAHR;MAIE,OAAO,EAAEC;IAJX;MAAA;MAAA;MAAA;IAAA,QAFF,eAQE;MAAA,uBACE,QAAC,eAAD;QAAiB,SAAS,EAAEI,gBAA5B;QAAA,UACGG,MAAM,CAACC,OAAP,CAAejB,KAAf,EAAsBkB,GAAtB,CAA0B,CAACV,IAAD,EAAOW,KAAP,KAAiB;UAC1C,oBACE;YAAA,uBACE;cAAA,UAAKX,IAAI,CAAC,CAAD,CAAJ,CAAQN;YAAb;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA5GQL,U;;KAAAA,U;AA8GT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}